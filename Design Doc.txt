Program Overview


        For our compiler we decided to use java as the java virtual machine allows for the program to be widely used as well as the language was widely understood by our team members. We also used the JavaCC parser generator in order to help us generate our parser, as the program offers a very understandable way to implement our generated grammer. 








Usage
        
To use our compiler we are targeting the linux command line.  To compile the java program for the compiler navigate to the compiler direcotry and in the command line type:
javac *.java
To use the compiler type:
java Compiler  [flags] (path of your c file).
 
If no flags are given the compilation will proceed under assumed parameters


Here is a list of what each flag does:


-t : will output token and label list
-pt : will output parse tree






Design Discussion




Language Specification
Currently we recognize:
        Identifiers, variables, functions
Keywords
Arithmetic expressions
Assignment
Boolean expressions
Goto statements
If / Else control flow
Unary operators
Return statements
Break statements
While loops


Currently we do Not recognize
Numop= , ++ ,and  --
Types other than integers
For loops
Binary operators
Switch statements
Pointers, arrays, strings
Preprocessor statements
Struct, enum
Casting, type promotion
Type specs